name: CI/CD Deplay

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
      # 切换到master分支
      - name: checkout
        uses: actions/checkout@master
      # 使用 node: 12
      - name: setup-node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      # 安装
      - name: npm install
        run: npm install
      # 构建
      - name: npm build
        run: npm run docs:build
      # 部署
      - name: deploy
        run: npm run deploy
        # 注入环境变量供ssh-deploy使用
        env:
          # secrets中配置的私钥，用于免密连接服务器
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          # 服务器地址
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          # 用户名
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          # GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.SSH_GITHUB_TOKEN }}

# name 可以自定义
name: Deploy GitHub Pages

# 触发条件：在 push 到 main/master 分支后，新的 Github 项目 应该都是 main，而之前的项目一般都是 master
on:
  push:
    branches:
      - master

# 任务
jobs:
  build-and-deploy:
    # 服务器环境：最新版 Ubuntu
    runs-on: ubuntu-latest
    steps:
      # 切换到master分支
      - name: checkout
        uses: actions/checkout@master
        with:
          persist-credentials: false
      # 使用 node: 12
      - name: setup-node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      # 生成静态文件
      - name: Build
        run: npm install && npm run docs:build
      # 部署到 GitHub Pages
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 也就是我们刚才生成的 secret
          BRANCH: gh-pages # 部署到 gh-pages 分支，因为 main 分支存放的一般是源码，而 gh-pages 分支则用来存放生成的静态文件
          FOLDER: docs/.vuepress/dist # vuepress 生成的静态文件存放的地方
